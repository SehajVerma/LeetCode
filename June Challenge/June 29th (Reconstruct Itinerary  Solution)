class Solution {
public:
    vector<string> findItinerary(vector<vector<string>>& tickets) {
         unordered_map<string,multiset<string>>adj;
         vector<string> v;
         stack<string>st;
        int n = tickets.size();
        for(int i=0;i<n;i++)
        {
            adj[tickets[i][0]].insert(tickets[i][1]);
        }
        st.push("JFK");
        while(!st.empty())
        {
            string src = st.top();
            if(adj[src].size()==0){
                v.push_back(src);
                st.pop();
            }
            else
            {
                auto city = adj[src].begin();
                st.push(*city);
                adj[src].erase(city);
                
            }
        }
        reverse(v.begin(),v.end());
        return v;
    }
};
